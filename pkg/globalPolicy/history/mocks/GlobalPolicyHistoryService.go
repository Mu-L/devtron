// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	bean "github.com/devtron-labs/devtron/pkg/globalPolicy/history/bean"

	mock "github.com/stretchr/testify/mock"

	repository "github.com/devtron-labs/devtron/pkg/globalPolicy/repository"
)

// GlobalPolicyHistoryService is an autogenerated mock type for the GlobalPolicyHistoryService type
type GlobalPolicyHistoryService struct {
	mock.Mock
}

// CreateHistoryEntry provides a mock function with given fields: globalPolicy, action
func (_m *GlobalPolicyHistoryService) CreateHistoryEntry(globalPolicy *repository.GlobalPolicy, action bean.HistoryOfAction) error {
	ret := _m.Called(globalPolicy, action)

	var r0 error
	if rf, ok := ret.Get(0).(func(*repository.GlobalPolicy, bean.HistoryOfAction) error); ok {
		r0 = rf(globalPolicy, action)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewGlobalPolicyHistoryService interface {
	mock.TestingT
	Cleanup(func())
}

// NewGlobalPolicyHistoryService creates a new instance of GlobalPolicyHistoryService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGlobalPolicyHistoryService(t mockConstructorTestingTNewGlobalPolicyHistoryService) *GlobalPolicyHistoryService {
	mock := &GlobalPolicyHistoryService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
