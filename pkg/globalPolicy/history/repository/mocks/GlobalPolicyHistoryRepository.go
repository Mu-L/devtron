// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	repository "github.com/devtron-labs/devtron/pkg/globalPolicy/history/repository"
	mock "github.com/stretchr/testify/mock"
)

// GlobalPolicyHistoryRepository is an autogenerated mock type for the GlobalPolicyHistoryRepository type
type GlobalPolicyHistoryRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: model
func (_m *GlobalPolicyHistoryRepository) Save(model *repository.GlobalPolicyHistory) error {
	ret := _m.Called(model)

	var r0 error
	if rf, ok := ret.Get(0).(func(*repository.GlobalPolicyHistory) error); ok {
		r0 = rf(model)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewGlobalPolicyHistoryRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewGlobalPolicyHistoryRepository creates a new instance of GlobalPolicyHistoryRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGlobalPolicyHistoryRepository(t mockConstructorTestingTNewGlobalPolicyHistoryRepository) *GlobalPolicyHistoryRepository {
	mock := &GlobalPolicyHistoryRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
