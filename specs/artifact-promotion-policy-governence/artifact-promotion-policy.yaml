openapi: 3.0.3
info:
  title: Artifact Promotion Policy
  description: Api Spec for Artifact Promotion Policy
  version: 1.0.0
servers:
  - url: 'https'
paths:
#  EXISTING APIs

  #  this api is used to fetch app workflows.
  #  we are adding new field artifactPromotionConfigured in workflows ,
  #  this will indicate if certain workflow contain atleast one environment with promotion policy
  /orchestrator/app/app-wf/view:
    get:
      summary: "Retrieve workflows"
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  result:
                    type: object
                    properties:
                      workflows:
                        type: array
                        items:
                          $ref: "#/components/schemas/Workflow"
                      ciConfig:
                        $ref: "#/components/schemas/CiConfig"
                      cdConfig:
                        $ref: "#/components/schemas/CdConfig"
                      externalCiConfig:
                        type: array
                        items:
                          $ref: "#/components/schemas/ExternalCiConfig"

  # /orchestrator/app/cd-pipeline/{cd-pipeline-id}/material:
  # will be adding new flag in the artifact object i.e PromotionDetails
  # /orchestrator/app/cd-pipeline/workflow/list

  #
  # NEW APIs


  /orchestrator/app/artifact-promotion/request:
  # this API is used to fetch the promotion details for a particular promoted artifact
    get:
      parameters:
        - name: promotionRequestId
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "successfully fetched artifact promotion meta data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  result:
                    $ref: '#/components/schemas/PromotionDetails'

    #  this api can be used to attempt promotion of an artifact on a selected environments of a given app. using action as PROMOTE
    #  can be used to cancel the promotion request using action as CANCEL by sending promotionRequestId in the payload.
    #  can be used to approve the promotion request using action as APPROVE by sending promotionRequestId in the payload.
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceId:
                  type: integer
                  description: "source id"
                sourceType:
                  type: string
                  description: "source type"
                action:
                  type: string
                  description: "action can be one of PROMOTE or CANCEL or APPROVE"
                promotionRequestId:
                  type: integer
                  description: "promotion request id, this is optional, required for CANCEL and APPROVE action"
                artifactId:
                  type: integer
                  description: "artifact id"
                appName:
                  type: string
                  description: "app name"
                environmentNames:
                  type: array
                  items:
                    type: string
                    description: "environment names"
      responses:
        "200":
          description: "attempts promoting the artifact to the given environments of the given app"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Environment"
                description: " environments with detailed message"

  #    this api can be used to get the list of environments present in the given workflowId.
  #    if artifactId is provided then we will evaluate the environments policies on the given artifact.
  /orchestrator/app/artifact-promotion/env/list:
    get:
      parameters:
        - name: workflowId
          in: query
          required: true
          schema:
            type: integer
          description: "workflow id"
        - name: artifactId
          in: query
          schema:
            type: integer
          description: "artifact id"

      responses:
        "200":
          description: "gets the list of environments for the given app."
          content:
            application/json:
              schema:
                type: object
                properties:
                  ciSource:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: "ci source id"
                      type:
                        type: string
                        description: "source type like CI, WEBHOOK"
                  environments:
                    type: array
                    items:
                      $ref: "#/components/schemas/Environment"
                    description: "list of environments"

  #  this will fetch the artifacts for artifact promotion,
  #  if the resource is CD this will fetch the images that are successfully deployed in that node.(expecting environment name in resourceName param)
  #  for CI | WEBHOOK this will fetch the images that were created on these source.(expecting CI|WEBHOOK pipeline name in resourceName param)

  #  also can be used to fetch pending promotion artifacts for a selected environment.
  #  if resource is PROMOTION_APPROVAL_PENDING_NODE, then this api will fetch the pending promotion requests for the given environment (in resourceName).
  #  also can be used to fetch pending requests waiting for approval on requested user for given workflowId(required)
  #  appName is required param
  /orchestrator/app/artifact-promotion/material:
    get:
      parameters:
        - name: resource
          in: query
          required: true
          schema:
            type: string
          description: "resource type, eg: CI,CD,WEBHOOK,PROMOTION_APPROVAL_PENDING_NODE"
        - name: resourceName
          in: query
          required: true
          schema:
            type: string
          description: "Name of the resource, for CI or WEBHOOK case resourceName will be name of the ci-pipeline, for other resource types it will be name of the environment"
        - name: appName
          in: query
          required: true
          schema:
            type: string
          description: "app Name"
        - name: workflowId
          in: query
          schema:
            type: integer
          description: "workflow id, this is required if fetchRequestsForMe is true"
        - name: fetchRequestsForMe
          in: query
          schema:
            type: boolean
          description: "if this is set to true we will fetch the list of artifacts which are pending for approval of current user"
      responses:
        "200":
          description: "gets the material for the given resource."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaterialResponse"

  /orchestrator/artifact-promotion/policy/{name}:
    get:
      description: "get artifact promotion policy by its name"
      responses:
        "200":
          description: "gets the artifact promotion policy by its name successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromotionPolicy"
    put:
      description: "update promotion policy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionPolicy'
      responses:
        "200":
          description: "successfully updated the policy."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromotionPolicy"
    delete:
      description: "Delete the promotion policy"
      responses:
        "204":
          description: "deletes the promotion policy by its name successfully."

  /orchestrator/artifact-promotion/list/min/policy:
    get:
      description: "gets the active policy names"
      responses:
        "200":
          description: "successfully fetched the policies"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: string
                  result:
                    type: array
                    items:
                      type: string

  /orchestrator/artifact-promotion/list/policy:
    get:
      parameters:
        - name: search
          in: query
          schema:
            type: string
            description: "search string is used fetch the polices by matching their names with search string"
        - name: sortBy
          in: query
          schema:
            type: string
            description: "sort by policyName or approverCount configured in that policy, default to policyName"
        - name: sortOrder
          in: query
          schema:
            type: string
            description: "ASC or DESC, default to ASC"
      description: Get promotion policies list
      responses:
        "200":
          description: gets the promotion by search param.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromotionPolicy"

  /orchestrator/artifact-promotion/policy:
    post:
      description: Create promotion policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionPolicy'
      responses:
        "200":
          description: policy created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromotionPolicy"

  /orchestrator/artifact-promotion/app-env/list:
    post:
      description: get app and env list with respective policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppEnvPolicyMappingsListFilter'

      responses:
        "200":
          description: "successfully fetched filtered app-env-policy mappings"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: integer
                  result:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                      # can be named as appEnvironmentPolicyMappings
                      environmentPolicyMappings:
                        type: array
                        items:
                          $ref: '#/components/schemas/AppEnvPolicyContainer'

  /orchestrator/artifact-promotion/app-env/apply:
    post:
      description: "used to apply a policy on the selected app-envs or using filtered app-env"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationEnvironments:
                  type: object
                  properties:
                    appName:
                      type: string
                    environmentName:
                      type: string
                applyToPolicyName:
                  type: string
                appEnvPolicyListFilter:
                  $ref: '#/components/schemas/AppEnvPolicyMappingsListFilter'
      responses:
        "200":
          description: "successfully applied the profile on the given app-envs or filtered app-envs"

  # this is an util API which fetches the supported filter criteria params supported in CEL expression
  /orchestrator/resource-filter/metadata:
    get:
      description: "fetches the filter conditions param meta data used in CEL expression"
      responses:
        "200":
          description: "successfully fetched filter condition CEL params"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: string
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilterCriteria'


components:
  schemas:
    PromotionDetails:
      type: object
      properties:
        source:
          type: string
        sourceType:
          type: string
        destination:
          type: string
        requestedBy:
          type: string
        approvedUsers:
          type: array
          items:
            type: string
        requestedOn:
          type: string
        promotedOn:
          type: string
        promotionPolicy:
          $ref: '#/components/schemas/PromotionPolicy'

    FilterCriteria:
      type: object
      properties:
        type:
          type: string
        label:
          type: string
        tooltip:
          type: string

    PromotionPolicy:
      type: object
      properties:
        name:
          required: true
          type: string
        description:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCondition'
        approvalMetadata:
          type: object
          properties:
            approverCount:
              type: integer
            restrictImageBuilderFromApprove:
              type: boolean
            restrictPromoterFromApprove:
              type: boolean
            restrictApproverFromDeploy:
              type: boolean
        identifierCount:
          type: integer
          description: "this is an optional key"
    ResourceCondition:
      type: object
      properties:
        conditionType:
          description: "PASS or FAIL condition"
          type: string
        expression:
          type: string
        errorMsg:
          type: string


    AppEnvPolicyMappingsListFilter:
      type: object
      properties:
        appNames:
          type: array
          items:
            type: string
        envNames:
          type: array
          items:
            type: string
        policyNames:
          type: array
          items:
            type: string
        sortBy:
          type: string
          description: "sort by applicationName or environmentName, defaults to applicationName"
        sortOrder:
          type: string
          description: "sorting order ASC or DESC , defaults to ASC"
        offset:
          type: integer
          description: "offset on the filtered result defaults to 0"
        size:
          type: integer
          description: "max size of the filtered result set , defaults to 20"
    AppEnvPolicyContainer:
      type: object
      properties:
        appName:
          type: string
        envName:
          type: string
        policyName:
          type: string


    ExternalCiConfig:
      type: object
      properties:
        id:
          type: integer
        webhookUrl:
          type: string
        payload:
          type: string
        accessKey:
          type: string
        payloadOption:
          type: string
        schema:
          type: string
        responses:
          type: string
        projectId:
          type: integer
        projectName:
          type: string
        environmentId:
          type: string
        environmentName:
          type: string
        environmentIdentifier:
          type: string
        appId:
          type: integer
        appName:
          type: string
        role:
          type: string
    CdConfig:
      type: object
      properties:
        pipelines:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              environmentId:
                type: integer
              environmentName:
                type: string
              description:
                type: string
              triggerType:
                type: string
              name:
                type: string
              deploymentTemplate:
                type: string
              preStage:
                type: object
              postStage:
                type: object
              preStageConfigMapSecretNames:
                type: object
              postStageConfigMapSecretNames:
                type: object
              isClusterCdActive:
                type: boolean
              parentPipelineId:
                type: integer
              parentPipelineType:
                type: string
              deploymentAppType:
                type: string
              userApprovalConfig:
                type: object
              appName:
                type: string
              deploymentAppDeleteRequest:
                type: boolean
              deploymentAppCreated:
                type: boolean
              appId:
                type: integer
              isVirtualEnvironment:
                type: boolean
              helmPackageName:
                type: string
              chartName:
                type: string
              chartBaseVersion:
                type: string
              containerRegistryName:
                type: string
              repoName:
                type: string
              manifestStorageType:
                type: string
              customTag:
                type: object
              customTagStage:
                type: object
              enableCustomTag:
                type: boolean
              isProdEnv:
                type: boolean
              switchFromCiPipelineId:
                type: integer
              addType:
                type: string
              childPipelineId:
                type: integer
              isDigestEnforcedForPipeline:
                type: boolean
              isDigestEnforcedForEnv:
                type: boolean
    CiConfig:
      type: object
      properties:
        ciGitConfiguredId:
          type: integer
        ciPipelines:
          type: array
          items:
            type: object
            properties:
              isManual:
                type: boolean
              dockerArgs:
                type: object
              isExternal:
                type: boolean
              parentCiPipeline:
                type: integer
              parentAppId:
                type: integer
              appId:
                type: integer
              externalCiConfig:
                type: object
              ciMaterial:
                type: array
                items:
                  type: object
                  properties:
                    source:
                      type: object
                      properties:
                        type:
                          type: string
                        value:
                          type: string
                        regex:
                          type: string
                    gitMaterialId:
                      type: integer
                    id:
                      type: integer
                    gitMaterialName:
                      type: string
                    isRegex:
                      type: boolean
              name:
                type: string
              id:
                type: integer
              active:
                type: boolean
              linkedCount:
                type: integer
              pipelineType:
                type: string
              scanEnabled:
                type: boolean
              isDockerConfigOverridden:
                type: boolean
              dockerConfigOverride:
                type: object
              isCITriggerBlocked:
                type: boolean
              lastTriggeredEnvId:
                type: integer
              enableCustomTag:
                type: boolean
    Workflow:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        appId:
          type: integer
        # newly added property in the workflow object
        artifactPromotionConfigured:
          type: boolean
        tree:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              appWorkflowId:
                type: integer
              type:
                type: string
              componentId:
                type: integer
              parentId:
                type: integer
              parentType:
                type: string
              deploymentAppDeleteRequest:
                type: boolean
              environmentName:
                type: string
              helmPackageName:
                type: string
              isLast:
                type: boolean
    Environment:
      type: object
      properties:
        #       environment name
        name:
          type: string
          description: "environment name"
        #       total approval count configured by the policy on this environment
        approvalCount:
          type: integer
          description: "total approval count configured by the policy on this environment"
        #       will be true only if this environment is governed by some promotion policy.
        promotionPossible:
          type: boolean
          description: "promotion possible or not"
        #       if requested this api with evaluation, then the detailed evaluation message will be sent in this field
        promotionEvaluationMessage:
          type: string
          description: "promotion evaluation message, detailed evaluation message for respective state"
        #       if requested this api with evaluation, then the evaluation state will be sent in this field
        promotionEvaluationState:
          type: string
          description: "promotion evaluation state, eg: imagePromoted,imageSentForApproval,imageAlreadyPromoted,errored"

    PromotionApprovalMetaData:
      type: object
      properties:
        approvalRequestId:
          type: integer
          description: "approval request id"
        approvalRuntimeState:
          type: integer
          description: "approval runtime state"

    ImageComment:
      type: object
      properties:
        id:
          type: integer
          description: "id"
        comment:
          type: string
          description: "comment"
        artifactId:
          type: integer
          description: "artifact id"
    ReleaseTag:
      type: object
      properties:
        id:
          type: integer
          description: "id"
        tag:
          type: string
          description: "tag"
        appId:
          type: integer
          description: "app id"
        artifactId:
          type: integer
          description: "artifact id"
        deleted:
          type: boolean
          description: "deleted"
    Artifact:
      type: object
      properties:
        id:
          type: integer
          description: "id"
        image:
          type: string
          description: "image"
        image_digest:
          type: string
          description: "image digest"
        material_info:
          type: string
          description: "material info"
        data_source:
          type: string
          description: "data source"
        vulnerable:
          type: boolean
          description: "vulnerable"
        scanEnabled:
          type: boolean
          description: "scan enabled"
        scanned:
          type: boolean
          description: "scanned"
        promotionApprovalMetaData:
          $ref: "#/components/schemas/PromotionApprovalMetaData"
        deployed:
          type: boolean
          description: "deployed"
        deployed_time:
          type: string
          description: "deployed time"
        promotedFrom:
          type: string
          description: "promoted from env or ci pipeline"
        promoteFromType:
          type: string
          description: "promote from type eg: CI, ENVIRONMENT"
        imageComment:
          $ref: "#/components/schemas/ImageComment"
        imageReleaseTags:
          type: array
          items:
            $ref: "#/components/schemas/ReleaseTag"
          description: "image release tags"


    MaterialResponse:
      type: object
      properties:
        approverUsers:
          type: array
          items:
            type: string
          description: " user emails who can approve the artifact promotion for the given pipeline(derived from appName and envName)"
        hideImageTaggingHardDelete:
          required: true
          type: boolean
          description: "imageTags can be hard deleted or not"
        tagsEditable:
          type: boolean
          description: "imageTags can be editable or not"
        appReleaseTagNames:
          type: array
          items:
            type: string
          description: "app release tag names"
        ciArtifacts:
          type: array
          items:
            $ref: "#/components/schemas/Artifact"
          description: "ci artifacts"
        totalCount:
          type: integer
          description: "total count of the tags"

