openapi: "3.0.0"
info:
  version: 1.0.0
  title: Devtron Labs - Release feature (resource catalogue v2)
paths:
  /orchestrator/resource/list/{kind}/{version}:
    get:
      description: List resource objects
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
            enum:
              - "release-track"
        - name: version
          in: path
          required: true
          schema:
            type: string
            enum:
              - "alpha1"
        - name: lite
          in: query
          required: false
          schema:
            type: boolean
            description: boolean value declaring that data to be fetched is lite or heavy
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    type: object
                    properties:
                      totalCount:
                        type: number
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/DevtronResourceListDto'
  /orchestrator/resource/{kind}/{version}:
    get:
      description: fetch resource object
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
            enum:
              - "release-track"
              - "release"
        - name: version
          in: path
          required: true
          schema:
            type: string
            enum:
              - "alpha1"
        - name: id
          description: id of the resource, either this or name is required. Preferred over name.
          in: query
          required: false
          schema:
            type: integer
        - name: name
          description: name of the resource, either this or id is required
          in: query
          required: false
          schema:
            type: string
        - name: component
          in: query
          required: false
          schema:
            type: array
            description: this string will contain array of components needed in the api call. If nothing is specified catalogue will be sent as before.
            items:
              type: string
              enum:
                - "overview"
                - "configStatus"
                - "note"
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    $ref: '#/components/schemas/DevtronResourceObjectDto'
    delete:
      description: delete resource object
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
            enum:
              - "release-track"
              - "release"
        - name: version
          in: path
          required: true
          schema:
            type: string
            enum:
              - "alpha1"
        - name: name
          in: query
          required: true
          schema:
            type: string
            description: name of the dependency on which operation is to be performed
            example: "release v2.0"
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    $ref: '#/components/schemas/DevtronResourceObjectDto'
    put:
      description: put resource object
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
            enum:
              - "release-track"
              - "release"
        - name: version
          in: path
          required: true
          schema:
            type: string
            enum:
              - "alpha1"
      requestBody:
        description: json
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevtronResourcePutObjectDto'
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                    example: 200
                  status:
                    type: string
                    description: API status
                    example: "OK"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      description: create/ update resource object
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
            enum:
              - "release-track"
              - "release"
        - name: version
          in: path
          required: true
          schema:
            type: string
            enum:
              - "alpha1"
      requestBody:
        description: json
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevtronResourcePostObjectDto'
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                    example: 200
                  status:
                    type: string
                    description: API status
                    example: "OK"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      description: patch resource object
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
            enum:
              - "release-track"
              - "release"
        - name: version
          in: path
          required: true
          schema:
            type: string
            enum:
              - "alpha1"
      requestBody:
        description: json
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevtronResourcePatchObjectDto'
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                    example: 200
                  status:
                    type: string
                    description: API status
                    example: "OK"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /orchestrator/resource/dependencies/{kind}/{version}:
    put:
      description: create,update resource dependency
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
            enum:
              - "release-track"
              - "release"
        - name: version
          in: path
          required: true
          schema:
            type: string
            enum:
              - "alpha1"
      requestBody:
        description: json
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDependenciesRequest'
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      description: create resource dependency
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
            enum:
              - "release-track"
              - "release"
        - name: version
          in: path
          required: true
          schema:
            type: string
            enum:
              - "alpha1"
      requestBody:
        description: json
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevtronResourcePatchObjectDto'
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /orchestrator/resource/dependencies/config-options/{kind}/{version}:
    get:
      description: List dependencies config options
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
            enum:
              - "release"
        - name: version
          in: path
          required: true
          schema:
            type: string
            enum:
              - "alpha1"
        - name: name
          in: query
          required: true
          schema:
            type: string
            description: name of the dependency on which operation is to be performed
            example: "orchestrator"
        - name: type
          in: query
          required: true
          schema:
            type: string
            description: type of dependency
            example: "devtron-application"
        - name: configOption
          in: query
          required: true
          schema:
            type: string
            example: "artifact"
            description: this string will contain the config, whose options are expected in the response.
            enum:
              - "artifact"
              - "commit"
        - name: selector
          in: query
          required: true
          schema:
            type: string
            description: this will contain the array of config-option identifiers. For git commits and artifacts the selector will be `workflowId|{id}`
            example: "workflowId|15"
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
            description: this will contain search key and value pair (pipe delimited). For git commits, the searchKey will be `commitHash|{gitHash}`, For artifact tag, the searchKey will be `imageTag|{tag}`
            example: "commitHash|dc994f3d4885a040122918919898b9e2ce85dea2"
      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    type: object
                    properties:
                      configType:
                        type: string
                        example: ciMaterials
                        enum:
                          - artifacts
                          - ciMaterials
                      dataList:
                        type: array
                        example:
                        oneOf:
                          - $ref: '#/components/schemas/ArtifactsList'
                          - $ref: '#/components/schemas/GitCommitsList'

components:
  schemas:
    DevtronResourceListDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/DevtronResourceObjectDto'
        - type: object
          properties:
            childObjects:
              type: array
              items:
                $ref: '#/components/schemas/DevtronResourceObjectDto'
    DevtronResourceObjectDto:
      type: object
      properties:
        id:
          type: integer
        kind:
          type: string
        subKind:
          type: string
        version:
          type: string
        name:
          type: string
        schema:
          type: string
        objectData:
          type: string
        configStatus:
          type: object
          properties:
            status:
              type: string
            lock:
              type: boolean
        overview:
          type: object
          properties:
            description:
              type: string
            note:
              type: string
            parentConfig:
              type: object
              properties:
                type:
                  type: string
                  description: "type of parent"
                  example: "releaseTrack"
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: id of the parent resource
                      example: 1 // id of the release track of which release is part of
            releaseVersion:
              type: string
            createdBy:
              type: string
            createdOn:
              type: string
              format: timestamp
            tags:
              type: object
    DevtronResourcePatchObjectDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        objectData:
          type: string
          description: field containing json of catalogue data. From alpha1 api. If action and actionPayload are not received in this api this field will be picked as these fields are added.
        dependencyInfo:
          type: object
          description: it keep name and type of dependency on which operation is to be performed.
          properties:
            name:
              type: string
              description: name of the dependency on which operation is to be performed
              example: "orchestrator"
            type:
              type: string
              description: type of dependency
              example: "devtron-application"
        query:
          type: array
          items:
            type: object
            required:
              - path
            description: payload containing information on how to execute the action
            properties:
              op:
                type: string
                enum: [ "add", "remove", "replace" ]
                default: "replace"
                description: The operation to perform
              path:
                type: string
                enum:
                  - "description"
                  - "note"
                  - "readme"
                  - "name"
                  - "releaseInstruction"
                  - "image"
                  - "commit"
              value:
                type: object
                description: Can be string or object on basis of patching path.
                  For description, note, readme & name object will be string.
                  For creating resource this will be object like '{tag:{a:b},description:hello}'
                  For deleting, no need of resource
            example:
              - op: "replace"
                path: "releaseInstruction"
                value: "This is a dummy release intruction for release v3.0-beta"
              - op: "replace"
                path: "commit"
                value: "dbc5bfc2240d276891509b7d5ebef97c4a0975d1"
              - op: "replace"
                path: "image"
                value: "shivamnagar409/test:abccdefg"
              - op: "remove"
                path: "application"
                value: 1 // indicating dependency Index of application to be removed
        schema:
          type: object
          description: json object containing the complete schema
          properties:
            overview:
              type: object
              properties:
                metadata:
                  type: object
                  description: field containing all data of catalogue
    DevtronResourcePutObjectDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        objectData:
          type: string
          description: field containing json of catalogue data. From alpha1 api. If action and actionPayload are not received in this api this field will be picked as these fields are added.
        schema:
          type: object
          description: json object containing the complete schema
          properties:
            overview:
              type: object
              properties:
                metadata:
                  type: object
                  description: field containing all data of catalogue
    DevtronResourcePostObjectDto:
      type: object
      properties:
        id:
          required: true
          type: integer
        name:
          required: true
          type: string
        description:
          type: string
        note:
          type: string
        status:
          type: object
          properties:
            value:
              type: string
            comment:
              type: string
        lock:
          type: boolean
        tags:
          type: object

    ApplicationDependenciesRequest:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the application.
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
        childDependencies:
          type: array
          items:
            $ref: '#/components/schemas/ChildDependency'
    Dependency:
      type: object
      properties:
        name:
          type: string
          description: The name of the dependency.
        id:
          type: integer
          description: The ID of the dependency.
        devtronResourceId:
          type: integer
        devtronResourceSchemaId:
          type: integer
        dependentOnIndex:
          type: array
          items:
            type: integer
        dependentOnParentIndex:
          type: integer
        typeOfDependency:
          type: string
          enum: [ 'upstream','level' ]
        index:
          type: integer
        config:
          type: object
          properties:
            image:
              type: string
              description: The image configuration.
            commitSource:
              type: object
              description: The commit source configuration.
        metadata:
          type: object
          properties:
            appName:
              type: string
            appId:
              type: integer
    ChildDependency:
      type: object
      properties:
        name:
          type: string
          description: The name of the child dependency.
        id:
          type: integer
          description: The ID of the child dependency.
        devtronResourceId:
          type: integer
        devtronResourceSchemaId:
          type: integer
        dependentOnIndex:
          type: integer
        dependentOnParentIndex:
          type: integer
        typeOfDependency:
          type: string
          enum: [ 'child' ]
        index:
          type: integer
        metadata:
          type: object
          properties:
            appStatus:
              type: string
            appName:
              type: string
            appId:
              type: integer
            environmentId:
              type: integer
            environmentName:
              type: string
            prod:
              type: boolean
            chartRefId:
              type: integer
            lastDeployed:
              type: string
              format: date-time
            lastDeployedBy:
              type: string
            lastDeployedImage:
              type: string
            deploymentAppDeleteRequest:
              type: boolean
            description:
              type: string
            isVirtualEnvironment:
              type: boolean
            clusterId:
              type: integer
            pipelineId:
              type: integer
            pipelineName:
              type: string
            latestCdWorkflowRunnerId:
              type: integer

    ArtifactsList:
      allOf:
        - $ref: '#/components/schemas/ArtifactInfoMin'
        - type: object
          properties:
            materialInfo:
              $ref: '#/components/schemas/MaterialInfos'
            ciConfigureSourceType:
              type: string
              description: git source type
              example: "SOURCE_TYPE_BRANCH_FIXED"
              enum:
                - "SOURCE_TYPE_BRANCH_FIXED"
                - "SOURCE_TYPE_BRANCH_REGEX"
                - "SOURCE_TYPE_TAG_ANY"
                - "WEBHOOK"
            ciConfigureSourceValue:
              type: string
              description: git source branch
              example: "main"
            scanned:
              type: boolean
              description: if the artifact is scanned
              example: false

    GitCommitsList:
      type: array
      items:
        type: object
        properties:
          builtImages:
            type: array
            items:
              $ref: '#/components/schemas/ArtifactInfoMin'
          sourceType:
            type: string
            description: git source type
            example: "SOURCE_TYPE_BRANCH_FIXED"
            enum:
              - "SOURCE_TYPE_BRANCH_FIXED"
              - "SOURCE_TYPE_BRANCH_REGEX"
              - "SOURCE_TYPE_TAG_ANY"
              - "WEBHOOK"
          sourceValue:
            type: string
            description: git source branch
            example: "main"
          sourceRegex:
            type: string
            description: git source regular expression
            example: ".*"
          lastFetchTime:
            type: string
            description: last git fetch time
            format: date-time
            example: "2023-11-01T10:19:54Z"
          isRepoError:
            type: boolean
            description: If repository fetch error
            example: true
          repoErrorMsg:
            type: string
            description: error message for repository fetch
            example: "404 not found"
          isBranchError:
            type: boolean
            description: If branch fetch error
            example: true
          branchErrorMsg:
            type: string
            description: error message for repository fetch
            example: "404 not found"
          commitInfo:
            $ref: '#/components/schemas/MaterialInfos'

    MaterialInfos:
      type: array
      items:
        type: object
        properties:
          author:
            type: string
            description: git commit author
            example: "devtron-bot"
          branch:
            type: string
            description: git branch
            example: "main"
          message:
            type: string
            description: git commit message
            example: "Merge pull request #41 from devtron-labs/config.md\n\ndoc: Create config.md"
          modifiedTime:
            type: string
            description: git commit time
            example: "2023-10-31T06:37:35Z"
          revision:
            type: string
            description: git commit hash
            example: "dc994f3d4885a040122918919898b9e2ce85dea2"
          tag:
            type: string
            description: git tag
            example: ""
          url:
            type: string
            description: git url
            example: "https://github.com/devtron-labs/kubewatch.git"
          webhookData:
            type: object
            description: webhook based git material data
            properties:
              id:
                type: integer
                example: 0
              eventActionType:
                type: string
                example: "merged"
              data:
                type: object
                example: null

    ArtifactInfoMin:
      type: object
      required:
        - id
        - image
        - createdTime
      properties:
        id:
          type: number
          description: artifact id
          example: 1
        image:
          type: string
          description: artifact id
          example: "docker.io/bitnami/memcached:1-debian-12"
        imageDigest:
          type: string
          description: artifact id
          example: "sha256:78905fe5e0ee07404377bae57dd384e1027bdc59a1351efd4c4d52990b39cab3"
        imageReleaseTags:
          type: array
          example:
            - "hotfix-alpha1"
            - "devtron"
          items:
            type: string
        imageComment:
          type: string
          example: "hotfix release for v3.0"
          description: image release comment
        latest:
          type: boolean
          description: if the latest artifact
          example: false
        deployed:
          type: boolean
          description: if the deployed artifact
          example: false
        deployedOnEnv:
          type: boolean
          description: deployed environment name
          example: "staging"
        createdTime:
          type: string
          format: date-time
          description: artifact created on time
          example: "2023-11-01T10:19:54Z"
        registryType:
          type: string
          description: artifact registry store type
          example: "docker"
        registryName:
          type: string
          description: artifact registry store name
          example: "devtron-docker"

    ErrorResponse:
      required:
        - code
        - status
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        status:
          type: string
          description: Error message
        errors:
          type: array
          description: errors
          items:
            $ref: '#/components/schemas/Error'
    Error:
      required:
        - code
        - status
      properties:
        code:
          type: integer
          format: int32
          description: Error internal code
        internalMessage:
          type: string
          description: Error internal message
        userMessage:
          type: string
          description: Error user message



